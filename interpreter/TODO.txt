Expressions
===========
[1] ASSIGNMENT
assign_variable(String statement)
>> Returns None.
If a variable has been declared already, it will update the value of the variable.  Otherwise, it will declare and initialize the variable.  This will call declare_variable() and update_variable() -- it is responsible for splitting instruction into declaration and update pieces.

declare_variable(String statement)
>> Raises "InvalidDeclarationException"
>> Returns None.
Declares the variable by putting it into the appropriate variable dictionary.  Is responsible for tokenization.

[private] update_variable(String statement)
>> Raises "InvalidDatatypeException"
>> Returns None.
Updates the value of the variable in the variable dictionary.  Responsible for data-type checking.  Is responsible for tokenization.

[2] EVALUATING STATEMENTS
evaluate_expression(String expression)
>> Return value of evaluated expression as a variable object
Evaluate mathematical expressions, boolean expressions, string concatenation, and variable lookups.  Handle other method calls.
Examples:
"Hello" + "world" + 4;
myArray[4];
int[] myArray = new int[4]; // {0, 0, 0, 0}
int myArray[] = new int[4]; // {0, 0, 0, 0}
int[] myArray = {1, 2, 3, 4}; // {1, 2, 3, 4}, 

int x = (y == 0) : 1 ? 0; -- expands to --> x = 1 if y == 0 else 0

3 / 2 -- should evaluate to --> 1
3.0 / 2 -- should evaluate to --> 1.5
(float) 3 / 2 -- should evaluate to --> 1.5

[3] CONDITIONAL STATEMENTS
handle_conditional_statements(String ifElseBlock)
>> Return None.
Break ifElseBlock into cases and determine which case to run.  Will pass chosen branch code back to analyze() to parse (no new lines).

Example:
if (A) {                         case_list: [{(A): doA()}, {(B): doB()}, (C): doC()}]
	doA();                       Iterate through case_list and check condition (key for dictionary)
}                                If true, evaluate and execute doA().  If false, move to next item in case_list.
else if (B) {    -- becomes -->
	doB();
}
else {
	doC();
}

[4] LOOPS


[5] ARRAYS
Arrays will be a separate object: list contents, array length, array datatype.

[6] SWITCH STATEMENTS


[7] SYSTEM CALLS
handle_println(String statement)
>> Returns None.
Extract the item to print, evaluate expressions inside.  Actually prints statement (as a side effect).